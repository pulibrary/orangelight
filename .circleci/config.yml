---
version: 2.1
executors:
  orangelight-executor:
    docker:
      - image: circleci/ruby:2.6-node-browsers
        environment:
          RAILS_ENV: test
          ORANGELIGHT_HOST: localhost
          ORANGELIGHT_USER: postgres
          SOLR_URL: http://solr:SolrRocks@localhost:8983/solr/orangelight-core-test
          NVM_HOME: ~/.nvm
      - image: postgres:10
        environment:
          POSTGRES_USER: orangelight
          POSTGRES_DB: orangelight_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: pulibrary/ci-solr:8.4-v1.0.0
        command: server/scripts/ci-start.sh
    working_directory: ~/orangelight
  basic-executor:
    docker:
      - image: circleci/ruby:2.6-node-browsers
        environment:
          RAILS_ENV: test
          NVM_HOME: ~/.nvm
    working_directory: ~/orangelight

commands:
  setup-bundler:
    steps:
      - run: gem install bundler -v '2.2.14'
      # Restore bundle cache
      - restore_cache:
          keys:
          - orangelight-1-{{ checksum "Gemfile.lock" }}
          - orangelight-1-
      # Bundle install dependencies
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: orangelight-1-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
jobs:
  build:
    executor: basic-executor
    steps:
      - attach_workspace:
          at: '~/orangelight'
      - checkout
      - setup-bundler
      - run:
          name: Install the NVM
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash
            [ -s "/home/circleci/.nvm/nvm.sh" ]
            source /home/circleci/.nvm/nvm.sh
            echo 'The NVM has been installed'
      - run:
          name: Install Node LTS/erbium
          command: |
            source ~/.nvm/nvm.sh
            nvm install lts/erbium
            nvm use lts/erbium
      - run:
          name: Install Yarn
          command: |
            source ~/.nvm/nvm.sh
            curl -o- -L https://yarnpkg.com/install.sh | bash
      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - orangelight-1-{{ checksum "yarn.lock" }}
            - orangelight-1-
      - run:
          name: Yarn Install
          command: |
            source ~/.nvm/nvm.sh
            yarn install --cache-folder ~/.cache/yarn
      # Store yarn / webpacker cache
      - save_cache:
          key: orangelight-1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: '~/orangelight'
          paths: '*'

  test:
    executor: orangelight-executor
    steps:
      - attach_workspace:
          at: '~/orangelight'
      - setup-bundler
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: sudo apt install postgresql-client
      - run:
          name: Database setup
          command: bundle exec rake db:setup
      #set timezone to est
      - run:
          name: Set Timezone to EST
          command: echo 'America/New_York' = /etc/timezone
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Load config into solr
          command: |
            cd solr/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://solr:SolrRocks@127.0.0.1:8983/solr/admin/configs?action=UPLOAD&name=orangelight"
            curl -H 'Content-type: application/json' http://solr:SolrRocks@127.0.0.1:8983/api/collections/  -d '{create: {name: orangelight-core-test, config: orangelight, numShards: 1}}'
      - run:
          name: Index Test Data
          command: bundle exec rake pulsearch:solr:index
      - run:
          name: Run Rspec
          command: bundle exec rspec spec
      - run:
          name: Run JS unit tests
          command: bundle exec yarn test

  rubocop:
    executor: basic-executor
    steps:
      - attach_workspace:
          at: '~/orangelight'
      - setup-bundler
      - run: bundle exec rubocop

workflows:
  build_accept:
    jobs:
      - build
      - rubocop:
         requires:
          - build
      - test:
         requires:
          - build
