version: 2
jobs:
  build:
    # Primary command image where all commands run
    docker:
      - image: circleci/ruby:2.6-node-browsers
        environment:
          RAILS_ENV: test
          ORANGELIGHT_HOST: localhost
          ORANGELIGHT_USER: postgres
          NVM_HOME: ~/.nvm

      # Service container image available at 'host: localhost'
      - image: postgres:10
        environment:
          POSTGRES_USER: orangelight
          POSTGRES_DB: orangelight_test
          POSTGRES_HOST_AUTH_METHOD: trust
    working_directory: ~/orangelight
    steps:
      - checkout
      - run:
          name: Install the NVM
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash
            [ -s "/home/circleci/.nvm/nvm.sh" ]
            source /home/circleci/.nvm/nvm.sh
            echo 'The NVM has been installed'
      - run:
          name: Install Node LTS/erbium
          command: |
            source ~/.nvm/nvm.sh
            nvm install lts/erbium
            nvm use lts/erbium
      - run:
          name: Install Yarn
          command: |
            source ~/.nvm/nvm.sh
            curl -o- -L https://yarnpkg.com/install.sh | bash
      - run:
          name: Install Java 8
          command: |
            sudo apt update
            sudo apt install software-properties-common apt-transport-https
            wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -
            sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
            sudo apt update
            sudo apt install adoptopenjdk-8-hotspot
            sudo update-alternatives --set java /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/bin/java
      #set timezone to est
      - run:
          name: Set Timezone to EST
          command: echo 'America/New_York' = /etc/timezone
      # Install Bundler
      - run: gem install bundler -v '2.2.14'
      # Restore bundle cache
      - restore_cache:
          keys:
          - orangelight-{{ checksum "Gemfile.lock" }}
          - orangelight-
      # Bundle install dependencies
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run: sudo apt install postgresql-client
      - save_cache:
          key: orangelight-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - orangelight-{{ checksum "yarn.lock" }}
            - orangelight-
      - run:
          name: Yarn Install
          command: |
            source ~/.nvm/nvm.sh
            yarn install --cache-folder ~/.cache/yarn
      # Store yarn / webpacker cache
      - save_cache:
          key: orangelight-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Start Solr test instance
          command: bundle exec rake server:test
          background: true
      - run: bin/jetty_wait
      - run:
          name: npm install
          command: npm install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rake db:setup
      - run:
          name: Run rubocop
          command: bundle exec rake rubocop
      - run:
          name: Run Rspec
          command: bundle exec rspec spec
      - run:
          name: Run JS unit tests
          command: bundle exec yarn test
workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build

