<% @page_title = t('blacklight.search.show.title', :document_title => document_show_html_title, :application_name => application_name).html_safe %>
<% content_for(:head) { render_link_rel_alternates(@document) }%>

<div id="document" class="document <%= render_document_class %>" itemscope  itemtype="<%= @document.itemtype %>" data-location="<%= Array.wrap(@document["advanced_location_s"]) %>">
  <div id="doc_<%= @document.id.to_s.parameterize %>">
    <%= render_document_partials @document, blacklight_config.view_config(:show).partials %>
  </div>
</div>

<% if @document.voyager_record? %>
  <!--
       // COinS, for Zotero among others.
       // This document_partial_name(@document) business is not quite right,
       // but has been there for a while.
       // If we add non-MARC doc types to the project they need to respond to this
       // method with a valid ctx (context) object.
  -->
  <span class="Z3988" title="<%= @document.export_as_openurl_ctx_kev(document_partial_name(@document)) %>"></span>
  <script type="text/javascript">
    jQuery(document).ready(function() {
      // marcit is the service that provides all the eJournal 856 urls in the catalog that start with "getit.princeton.edu".
      //   Those URLs contain an exact ID value used by SFX that the COinS generation function isn't aware of.
      //    So we make sure the 856 openURL is sent over to umlaut rather than the default one the helper produces from the solr doc's metadata.
      if($("*[data-umlaut-full-text='true']").length || $("*[data-umlaut-services='true']").length) {
        if($("*[data-url-marcit]").length) {
          // pull the marcit url
          var ctx = $('.availability_full-text').data('url-marcit');
          var ctx_type = "marcit";
        } else {
          // pulls the helper-generated openurl querystring
          var ctx = $("span.Z3988").attr("title");
        }
        var umlaut_base = "<%= ENV['umlaut_base'] %>";
        var updater = new Umlaut.HtmlUpdater( umlaut_base, ctx );
        updater.add_section_target({
          umlaut_section_id: "fulltext",
          selector: "#full_text",
          before_update: function(html, count) {
            //hide the section heading on the snippet, we don't want it
            if(count == 0 || ctx_type == 'marcit' || $('.availability_full-text-alternative').length) {
              $(html).find(".section_heading").hide();
            }
            if (count != 0) {
              $(html).show();
            }
            return (count != 0);
          },
          after_update: function(html, count) {
            if (count != 0) {
               $(html).closest(".availability--panel_umlaut").show();
            }
          }
        });
        // try additional services if appropriate
        if($("*[data-umlaut-services='true']").length) {
          updater.add_section_target({
            umlaut_section_id: "highlighted_link",
            selector:"#highlighted_link",
            before_update: function(html, count) {
              if(count == 0) {
                 $(html).find(".section_heading").hide();
              }
              return (count !=0)
            },
            after_update: function(html, count) {
              if (count != 0) {
                 $(html).closest(".availability--panel_umlaut").show();
              }
            }
          });
          updater.add_section_target({
            umlaut_section_id: "excerpts",
            selector:"#excerpts",
            before_update: function(html, count) {
              if(count == 0) {
                $(html).find(".section_heading").hide();
              }
              if (count != 0) {
                $(html).show();
              }
              return (count !=0)
            },
            after_update: function(html, count) {
              if (count != 0) {
                 $(html).closest(".availability--panel_umlaut").show();
              }
            }
          });
        }
        updater.update();
      }
    });
  </script>
<% end %>
